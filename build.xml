<project name="Gifter" xmlns:ivy="antlib:org.apache.ivy.ant" default="compile" basedir=".">
	<description>
    Gifter
	</description>
	<!-- set globar properties for this build -->
  <property name="lib.dir" value="lib" />
	<property name="src" location="src"/>
	<property name="src.test" location="tst"/>
	<property name="build" location="build"/>
  <property name="build.core" location="build/core"/>
  <property name="build.test" location="build/test"/>
	<property name="dist" location="dist"/>

  <path id="lib.path.id">
    <fileset dir="${lib.dir}" />
  </path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
		<mkdir dir="${build.core}"/>
		<mkdir dir="${build.test}"/>
    <mkdir dir="${lib.dir}"/>
	</target>

	<target name="compile" depends="init" description="compile the source" >
		<!-- Compile the java code from ${src} int ${build} -->
		<javac srcdir="${src}" destdir="${build.core}" includeantruntime="false" classpathref="lib.path.id"/>
	</target>

	<target name="compile-test" depends="compile" description="compile the test code" >
		<!-- Compile the java code from ${src} int ${build} -->
    <javac srcdir="${src.test}" destdir="${build.test}" includeantruntime="false">
      <classpath>
        <pathelement location="${build.core}"/>
        <path refid="lib.path.id"/>
      </classpath>
    </javac>
	</target>

  <target name="resolve-deps" description="--> retrieve dependencies with ivy">
    <ivy:retrieve />
  </target>

	<target name="dist" depends="compile"
		description="generate the destribution">
		<!-- Create the distribution diretory -->
		<mkdir dir="${dist}/lib"/>

		<!-- Put everythin in ${build} into the jar file -->
		<jar jarfile="${dist}/lib/Gifter-${DSTAMP}.jar" basedir="${build.core}"/>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="run" depends="compile" description="run main">
    <java classname="com.cooldoger.gifter.Main" fork="yes">
      <classpath>
        <pathelement path="${build.core}"/>
      </classpath>
    </java>
	</target>

  <target name="test" depends="compile-test">
    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <pathelement path="${build.core}"/>
        <pathelement path="${build.test}"/>
        <path refid="lib.path.id"/>
      </classpath>
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="${src.test}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

</project>
